"use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}function ownKeys(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),t.push.apply(t,r)}return t}function _objectSpread(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(t,!0).forEach(function(e){_defineProperty(n,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):ownKeys(t).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))})}return n}function _defineProperty(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function initWeb3(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(window.ethereum)return e.prev=1,e.next=4,regeneratorRuntime.awrap(window.ethereum.request({method:"eth_requestAccounts"}));e.next=13;break;case 4:return e.abrupt("return",new Web3(window.ethereum));case 7:throw e.prev=7,e.t0=e.catch(1),console.error("用户拒绝了授权请求:",e.t0),new Error("需要钱包授权才能继续");case 11:e.next=18;break;case 13:if(window.web3)return e.abrupt("return",new Web3(window.web3.currentProvider));e.next=17;break;case 17:throw new Error("未检测到以太坊钱包。请安装MetaMask!");case 18:case"end":return e.stop()}},null,null,[[1,7]])}function loadContract(e,n,t){return new e.eth.Contract(n,t)}function loadAbiFromFile(e){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.abrupt("return",JSON.parse(lotteryAbiJson));case 4:throw e.prev=4,e.t0=e.catch(0),console.error("加载ABI失败:",e.t0),e.t0;case 8:case"end":return e.stop()}},null,null,[[0,4]])}function getCurrentAccount(n){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(n.eth.getAccounts());case 2:return t=e.sent,e.abrupt("return",t[0]);case 4:case"end":return e.stop()}})}function listenForAccountChanges(e){window.ethereum&&window.ethereum.on("accountsChanged",e)}function listenForNetworkChanges(e){window.ethereum&&window.ethereum.on("chainChanged",e)}function sendTransaction(n,t,r){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(n.eth.sendTransaction(_objectSpread({},t,{from:r})));case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}})}function callContractMethod(n,t){var r,a,o=arguments;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return a=2<o.length&&void 0!==o[2]?o[2]:[],e.next=3,regeneratorRuntime.awrap((r=n.methods)[t].apply(r,_toConsumableArray(a)).call());case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}})}function sendContractTransaction(n,t){var r,a,o,u,c=arguments;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return a=2<c.length&&void 0!==c[2]?c[2]:[],o=3<c.length?c[3]:void 0,u=4<c.length&&void 0!==c[4]?c[4]:0,e.next=5,regeneratorRuntime.awrap((r=n.methods)[t].apply(r,_toConsumableArray(a)).send({from:o,value:u}));case 5:return e.abrupt("return",e.sent);case 6:case"end":return e.stop()}})}function getTokenBalance(n,t){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(n.methods.balanceOf(t).call());case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}})}function approveToken(n,t,r,a){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(n.methods.approve(t,r).send({from:a}));case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}})}window.Web3Connector={initWeb3:initWeb3,loadContract:loadContract,loadAbiFromFile:loadAbiFromFile,getCurrentAccount:getCurrentAccount,listenForAccountChanges:listenForAccountChanges,listenForNetworkChanges:listenForNetworkChanges,sendTransaction:sendTransaction,callContractMethod:callContractMethod,sendContractTransaction:sendContractTransaction,getTokenBalance:getTokenBalance,approveToken:approveToken};var lotteryAbiJson='[\n    {\n        "inputs": [\n            {\n                "internalType": "address",\n                "name": "_xwawaCoin",\n                "type": "address"\n            },\n            {\n                "internalType": "address",\n                "name": "_communityTreasury",\n                "type": "address"\n            }\n        ],\n        "stateMutability": "nonpayable",\n        "type": "constructor"\n    },\n    {\n        "inputs": [],\n        "name": "XWAWA_COIN",\n        "outputs": [\n            {\n                "internalType": "contract IERC20",\n                "name": "",\n                "type": "address"\n            }\n        ],\n        "stateMutability": "view",\n        "type": "function"\n    },\n    {\n        "inputs": [],\n        "name": "communityTreasury",\n        "outputs": [\n            {\n                "internalType": "address",\n                "name": "",\n                "type": "address"\n            }\n        ],\n        "stateMutability": "view",\n        "type": "function"\n    },\n    {\n        "inputs": [],\n        "name": "draw",\n        "outputs": [\n            {\n                "internalType": "uint256",\n                "name": "",\n                "type": "uint256"\n            }\n        ],\n        "stateMutability": "nonpayable",\n        "type": "function"\n    },\n    {\n        "inputs": [],\n        "name": "drawCost",\n        "outputs": [\n            {\n                "internalType": "uint256",\n                "name": "",\n                "type": "uint256"\n            }\n        ],\n        "stateMutability": "view",\n        "type": "function"\n    }\n]';
//# sourceMappingURL=web3-connector.min.js.map
