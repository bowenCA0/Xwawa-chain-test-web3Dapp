{"version":3,"sources":["script.js"],"names":["document","addEventListener","enBtn","getElementById","zhBtn","elementsWithLang","querySelectorAll","element","setLanguage","lang","forEach","localStorage","setItem","getAttribute","concat","add","classList","remove","getItem","savedLanguage","click","mobileMenuBtn","querySelector","body","mobileMenu","createElement","nav","navClone","cloneNode","appendChild","closeBtn","innerHTML","mobileLinks","link","anchor","targetElement","e","window","preventDefault","behavior","targetId","this","scrollTo","animateOnScroll","transform","getBoundingClientRect","top","innerHeight","style","opacity","transition","carousel","updateCarousel","translateX","currentSlide","totalSlides","nextBtn","indicator","length","autoPlayInterval","nextSlide","indicators","index","toggle","slides","slide","prevSlide","stopAutoPlay","clearInterval","carouselContainer","prevBtn","goToSlide","key","startAutoPlay","price","change24h","lastUpdate","bitcoin","okb","volatility","Math","random","randomChange","console","priceData","xwawa","currentPrice","Date","log","error","_context","t0","fetchBitcoinPrice","response","data","ticker","_currentPrice","_change24h","regeneratorRuntime","async","_context2","prev","next","awrap","fetch","sent","json","code","parseFloat","last","changePercent","abrupt","stop","fetchOkbPrice","_currentPrice2","_change24h2","_context3","basePrice","Error","xwawaPrice","xwawaChange","xwawaUpdate","toFixed","changeText","textContent","toLocaleTimeString","btcPrice","btcChange","btcUpdate","toLocaleString","minimumFractionDigits","maximumFractionDigits","className","okbUpdate","okbPrice","okbChange","updateAllPrices","promises","_context4","updatePriceDisplay","setInterval"],"mappings":"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","file":"script.min.js","sourcesContent":["/**\n * Xwawa 项目 - 通用JavaScript功能模块\n * \n * 主要功能:\n * 1. 多语言切换系统 - 支持中英文动态切换\n * 2. 移动端菜单 - 响应式导航菜单\n * 3. 平滑滚动 - 锚点链接平滑滚动效果\n * 4. 滚动动画 - 元素进入视窗时的动画效果\n * 5. 艺术展示轮播图 - 主页艺术作品展示功能\n * \n * 后端API集成需求:\n * - POST /api/user/preferences - 保存用户语言偏好\n * - GET /api/artworks - 获取艺术作品数据\n * \n * 依赖项:\n * - Font Awesome (图标库)\n * - CSS动画支持\n * \n * 浏览器兼容性:\n * - 现代浏览器 (ES6+)\n * - 移动端浏览器\n */\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    \n    /**\n     * 多语言切换系统\n     * 功能: 实现中英文界面切换，保存用户语言偏好\n     * 数据存储: localStorage\n     * 后端集成: 需要API保存用户偏好到服务器\n     */\n    const enBtn = document.getElementById('en-btn');\n    const zhBtn = document.getElementById('zh-btn');\n    const elementsWithLang = document.querySelectorAll('[data-en][data-zh]');\n\n    // 英文按钮点击事件\n    enBtn.addEventListener('click', function() {\n        setLanguage('en');\n        enBtn.classList.add('active');\n        zhBtn.classList.remove('active');\n    });\n\n    // 中文按钮点击事件\n    zhBtn.addEventListener('click', function() {\n        setLanguage('zh');\n        zhBtn.classList.add('active');\n        enBtn.classList.remove('active');\n    });\n\n    /**\n     * 设置页面语言\n     * @param {string} lang - 语言代码 ('en' 或 'zh')\n     * \n     * 功能说明:\n     * 1. 遍历所有带有多语言属性的元素\n     * 2. 根据语言代码更新元素文本内容\n     * 3. 保存语言偏好到本地存储\n     * \n     * 后端集成建议:\n     * - 如果用户已登录，同时调用API保存偏好到服务器\n     * - API: POST /api/user/preferences {language: lang}\n     */\n    function setLanguage(lang) {\n        elementsWithLang.forEach(element => {\n            element.textContent = element.getAttribute(`data-${lang}`);\n        });\n        localStorage.setItem('xwawa-language', lang);\n        \n        // TODO: 如果用户已登录，保存到服务器\n        // if (window.userLoggedIn) {\n        //     saveLanguagePreference(lang);\n        // }\n    }\n\n    // 检查并应用保存的语言偏好\n    const savedLanguage = localStorage.getItem('xwawa-language');\n    if (savedLanguage) {\n        if (savedLanguage === 'zh') {\n            zhBtn.click();\n        } else {\n            enBtn.click();\n        }\n    }\n\n    /**\n     * 移动端菜单系统\n     * 功能: 为小屏幕设备提供可折叠的导航菜单\n     * 特性: 动画效果、点击外部关闭、链接点击自动关闭\n     */\n    const mobileMenuBtn = document.querySelector('.mobile-menu-btn');\n    const body = document.body;\n\n    if (mobileMenuBtn) {\n        // Create mobile menu\n        const mobileMenu = document.createElement('div');\n        mobileMenu.className = 'mobile-menu';\n        \n        // Clone navigation\n        const nav = document.querySelector('nav');\n        if (nav) {\n            const navClone = nav.cloneNode(true);\n            mobileMenu.appendChild(navClone);\n        }\n        \n        // Add close button\n        const closeBtn = document.createElement('div');\n        closeBtn.className = 'close-menu';\n        closeBtn.innerHTML = '<i class=\"fas fa-times\"></i>';\n        mobileMenu.appendChild(closeBtn);\n        \n        // Append to body\n        body.appendChild(mobileMenu);\n        \n        // Toggle mobile menu\n        mobileMenuBtn.addEventListener('click', function() {\n            mobileMenu.classList.add('active');\n        });\n        \n        closeBtn.addEventListener('click', function() {\n            mobileMenu.classList.remove('active');\n        });\n        \n        // Close menu when clicking on a link\n        const mobileLinks = mobileMenu.querySelectorAll('a');\n        mobileLinks.forEach(link => {\n            link.addEventListener('click', function() {\n                mobileMenu.classList.remove('active');\n            });\n        });\n    }\n\n    // Smooth scrolling for anchor links\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\n        anchor.addEventListener('click', function (e) {\n            e.preventDefault();\n            \n            const targetId = this.getAttribute('href');\n            if (targetId === '#') return;\n            \n            const targetElement = document.querySelector(targetId);\n            if (targetElement) {\n                window.scrollTo({\n                    top: targetElement.offsetTop - 80,\n                    behavior: 'smooth'\n                });\n            }\n        });\n    });\n\n    // Animation on scroll\n    const animateOnScroll = function() {\n        const elements = document.querySelectorAll('.feature-card, .section-title, .about-content, .stat-item');\n        \n        elements.forEach(element => {\n            const elementPosition = element.getBoundingClientRect().top;\n            const windowHeight = window.innerHeight;\n            \n            if (elementPosition < windowHeight - 100) {\n                element.style.opacity = '1';\n                element.style.transform = 'translateY(0)';\n            }\n        });\n    };\n\n    // Set initial styles for animation\n    document.querySelectorAll('.feature-card, .section-title, .about-content, .stat-item').forEach(element => {\n        element.style.opacity = '0';\n        element.style.transform = 'translateY(20px)';\n        element.style.transition = 'opacity 0.5s ease, transform 0.5s ease';\n    });\n\n    // Run animation on load and scroll\n    window.addEventListener('load', animateOnScroll);\n    window.addEventListener('scroll', animateOnScroll);\n\n    /**\n     * 艺术展示轮播图功能\n     * 功能: 主页艺术作品展示的交互式轮播图\n     * \n     * 特性:\n     * - 自动播放 (5秒间隔)\n     * - 手动导航 (前进/后退按钮)\n     * - 指示器点击跳转\n     * - 键盘导航 (左右箭头键)\n     * - 鼠标悬停暂停自动播放\n     * - 响应式设计\n     * \n     * 后端集成:\n     * - 艺术作品数据应从API获取: GET /api/artworks\n     * - 支持动态加载更多作品\n     * - 图片懒加载优化\n     */\n    const carousel = document.querySelector('.art-carousel-slides');\n    const slides = document.querySelectorAll('.art-slide');\n    const indicators = document.querySelectorAll('.art-indicator');\n    const prevBtn = document.querySelector('.art-carousel-btn.prev');\n    const nextBtn = document.querySelector('.art-carousel-btn.next');\n    \n    if (carousel && slides.length > 0) {\n        let currentSlide = 0;\n        const totalSlides = slides.length;\n\n        /**\n         * 更新轮播图显示状态\n         * 功能: 同步更新轮播图位置、指示器状态和幻灯片激活状态\n         */\n        function updateCarousel() {\n            const translateX = -currentSlide * (100 / totalSlides);\n            carousel.style.transform = `translateX(${translateX}%)`;\n            \n            // 更新指示器激活状态\n            indicators.forEach((indicator, index) => {\n                indicator.classList.toggle('active', index === currentSlide);\n            });\n            \n            // 更新幻灯片激活状态 (用于CSS动画)\n            slides.forEach((slide, index) => {\n                slide.classList.toggle('active', index === currentSlide);\n            });\n        }\n\n        // 下一张\n        function nextSlide() {\n            currentSlide = (currentSlide + 1) % totalSlides;\n            updateCarousel();\n        }\n\n        // 上一张\n        function prevSlide() {\n            currentSlide = (currentSlide - 1 + totalSlides) % totalSlides;\n            updateCarousel();\n        }\n\n        // 跳转到指定幻灯片\n        function goToSlide(index) {\n            currentSlide = index;\n            updateCarousel();\n        }\n\n        // 绑定事件\n        if (nextBtn) {\n            nextBtn.addEventListener('click', nextSlide);\n        }\n        \n        if (prevBtn) {\n            prevBtn.addEventListener('click', prevSlide);\n        }\n\n        // 绑定指示器点击事件\n        indicators.forEach((indicator, index) => {\n            indicator.addEventListener('click', () => goToSlide(index));\n        });\n\n        // 自动播放（可选）\n        let autoPlayInterval;\n        \n        function startAutoPlay() {\n            autoPlayInterval = setInterval(nextSlide, 5000); // 每5秒切换\n        }\n        \n        function stopAutoPlay() {\n            clearInterval(autoPlayInterval);\n        }\n\n        // 鼠标悬停时停止自动播放\n        const carouselContainer = document.querySelector('.art-carousel-container');\n        if (carouselContainer) {\n            carouselContainer.addEventListener('mouseenter', stopAutoPlay);\n            carouselContainer.addEventListener('mouseleave', startAutoPlay);\n        }\n\n        // 初始化\n        updateCarousel();\n        startAutoPlay();\n\n        // 键盘导航\n        document.addEventListener('keydown', function(e) {\n            if (e.key === 'ArrowLeft') {\n                prevSlide();\n            } else if (e.key === 'ArrowRight') {\n                nextSlide();\n            }\n        });\n    }\n\n    /**\n     * 实时价格更新系统\n     * 功能: 每30秒更新XWAWA代币和比特币价格\n     * 数据来源: \n     * - XWAWA代币: 模拟API (实际项目中需要连接真实的DEX API)\n     * - 比特币: OKX API\n     */\n    \n    // 价格数据缓存\n    let priceData = {\n        xwawa: {\n            price: 0.0,\n            change24h: 0.0,\n            lastUpdate: null\n        },\n        bitcoin: {\n            price: 0.0,\n            change24h: 0.0,\n            lastUpdate: null\n        },\n        okb: {\n            price: 0.0,\n            change24h: 0.0,\n            lastUpdate: null\n        }\n    };\n\n    /**\n     * 获取XWAWA代币价格 (模拟数据)\n     * 实际项目中需要连接到DEX API或代币交易所API\n     */\n    async function fetchXwawaPrice() {\n        try {\n            // 模拟API调用 - 实际项目中替换为真实API\n            // 例如: const response = await fetch('https://api.dexscreener.com/latest/dex/tokens/YOUR_TOKEN_ADDRESS');\n            \n            // 模拟价格波动\n            const basePrice = 0.0234; // 基础价格\n            const volatility = 0.1; // 10% 波动率\n            const randomChange = (Math.random() - 0.5) * volatility;\n            const currentPrice = basePrice * (1 + randomChange);\n            \n            // 模拟24小时变化\n            const change24h = (Math.random() - 0.5) * 20; // -10% 到 +10%\n            \n            priceData.xwawa = {\n                price: currentPrice,\n                change24h: change24h,\n                lastUpdate: new Date()\n            };\n            \n            console.log('XWAWA价格更新:', priceData.xwawa);\n            return priceData.xwawa;\n            \n        } catch (error) {\n            console.error('获取XWAWA价格失败:', error);\n            return null;\n        }\n    }\n\n    /**\n     * 获取比特币价格 (OKX API)\n     * 使用OKX公开API获取BTC价格\n     */\n    async function fetchBitcoinPrice() {\n        try {\n            // 使用OKX公开API\n            const response = await fetch('https://www.okx.com/api/v5/market/ticker?instId=BTC-USDT');\n            const data = await response.json();\n            \n            if (data.code === '0' && data.data && data.data.length > 0) {\n                const ticker = data.data[0];\n                const currentPrice = parseFloat(ticker.last);\n                const change24h = parseFloat(ticker.changePercent) * 100;\n                \n                priceData.bitcoin = {\n                    price: currentPrice,\n                    change24h: change24h,\n                    lastUpdate: new Date()\n                };\n                \n                console.log('比特币价格更新:', priceData.bitcoin);\n                return priceData.bitcoin;\n            } else {\n                throw new Error('API响应格式错误');\n            }\n            \n        } catch (error) {\n            console.error('获取比特币价格失败:', error);\n            \n            // 备用方案：使用模拟数据\n            const basePrice = 43000; // 基础价格\n            const volatility = 0.05; // 5% 波动率\n            const randomChange = (Math.random() - 0.5) * volatility;\n            const currentPrice = basePrice * (1 + randomChange);\n            const change24h = (Math.random() - 0.5) * 10; // -5% 到 +5%\n            \n            priceData.bitcoin = {\n                price: currentPrice,\n                change24h: change24h,\n                lastUpdate: new Date()\n            };\n            \n            return priceData.bitcoin;\n        }\n    }\n\n    /**\n     * 获取OKB代币价格 (OKX API)\n     * 使用OKX公开API获取OKB价格\n     */\n    async function fetchOkbPrice() {\n        try {\n            // 使用OKX公开API获取OKB价格\n            const response = await fetch('https://www.okx.com/api/v5/market/ticker?instId=OKB-USDT');\n            const data = await response.json();\n            \n            if (data.code === '0' && data.data && data.data.length > 0) {\n                const ticker = data.data[0];\n                const currentPrice = parseFloat(ticker.last);\n                const change24h = parseFloat(ticker.changePercent) * 100;\n                \n                priceData.okb = {\n                    price: currentPrice,\n                    change24h: change24h,\n                    lastUpdate: new Date()\n                };\n                \n                console.log('OKB价格更新:', priceData.okb);\n                return priceData.okb;\n            } else {\n                throw new Error('API响应格式错误');\n            }\n            \n        } catch (error) {\n            console.error('获取OKB价格失败:', error);\n            \n            // 备用方案：使用模拟数据\n            const basePrice = 45.50; // OKB基础价格\n            const volatility = 0.08; // 8% 波动率\n            const randomChange = (Math.random() - 0.5) * volatility;\n            const currentPrice = basePrice * (1 + randomChange);\n            const change24h = (Math.random() - 0.5) * 15; // -7.5% 到 +7.5%\n            \n            priceData.okb = {\n                price: currentPrice,\n                change24h: change24h,\n                lastUpdate: new Date()\n            };\n            \n            return priceData.okb;\n        }\n    }\n\n    /**\n     * 更新页面上的价格显示\n     */\n    function updatePriceDisplay() {\n        // 更新XWAWA价格\n        const xwawaPrice = document.getElementById('xwawa-price');\n        const xwawaChange = document.getElementById('xwawa-change');\n        const xwawaUpdate = document.getElementById('xwawa-update');\n        \n        if (xwawaPrice && priceData.xwawa.price > 0) {\n            xwawaPrice.textContent = `$${priceData.xwawa.price.toFixed(4)}`;\n            \n            if (xwawaChange) {\n                const changeText = `${priceData.xwawa.change24h >= 0 ? '+' : ''}${priceData.xwawa.change24h.toFixed(2)}%`;\n                xwawaChange.textContent = changeText;\n                xwawaChange.className = `price-change ${priceData.xwawa.change24h >= 0 ? 'positive' : 'negative'}`;\n            }\n            \n            if (xwawaUpdate) {\n                xwawaUpdate.textContent = `更新时间: ${priceData.xwawa.lastUpdate.toLocaleTimeString()}`;\n            }\n        }\n        \n        // 更新比特币价格\n        const btcPrice = document.getElementById('btc-price');\n        const btcChange = document.getElementById('btc-change');\n        const btcUpdate = document.getElementById('btc-update');\n        \n        if (btcPrice && priceData.bitcoin.price > 0) {\n            btcPrice.textContent = `$${priceData.bitcoin.price.toLocaleString('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2})}`;\n            \n            if (btcChange) {\n                const changeText = `${priceData.bitcoin.change24h >= 0 ? '+' : ''}${priceData.bitcoin.change24h.toFixed(2)}%`;\n                btcChange.textContent = changeText;\n                btcChange.className = `price-change ${priceData.bitcoin.change24h >= 0 ? 'positive' : 'negative'}`;\n            }\n            \n            if (btcUpdate) {\n                btcUpdate.textContent = `更新时间: ${priceData.bitcoin.lastUpdate.toLocaleTimeString()}`;\n            }\n        }\n        \n        // 更新OKB价格\n        const okbPrice = document.getElementById('okb-price');\n        const okbChange = document.getElementById('okb-change');\n        const okbUpdate = document.getElementById('okb-update');\n        \n        if (okbPrice && priceData.okb.price > 0) {\n            okbPrice.textContent = `$${priceData.okb.price.toLocaleString('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2})}`;\n            \n            if (okbChange) {\n                const changeText = `${priceData.okb.change24h >= 0 ? '+' : ''}${priceData.okb.change24h.toFixed(2)}%`;\n                okbChange.textContent = changeText;\n                okbChange.className = `price-change ${priceData.okb.change24h >= 0 ? 'positive' : 'negative'}`;\n            }\n            \n            if (okbUpdate) {\n                okbUpdate.textContent = `更新时间: ${priceData.okb.lastUpdate.toLocaleTimeString()}`;\n            }\n        }\n    }\n\n    /**\n     * 获取所有价格数据\n     */\n    async function updateAllPrices() {\n        console.log('开始更新价格数据...');\n        \n        // 并行获取三个价格\n        const promises = [\n            fetchXwawaPrice(),\n            fetchBitcoinPrice(),\n            fetchOkbPrice()\n        ];\n        \n        try {\n            await Promise.all(promises);\n            updatePriceDisplay();\n            console.log('价格数据更新完成');\n        } catch (error) {\n            console.error('价格更新失败:', error);\n        }\n    }\n\n    /**\n     * 初始化价格更新系统\n     */\n    function initializePriceUpdates() {\n        // 检查价格显示区域是否存在\n        const priceDisplay = document.querySelector('.price-display');\n        if (!priceDisplay) {\n            console.log('价格显示区域不存在，跳过价格更新初始化');\n            return;\n        }\n        \n        console.log('初始化价格更新系统...');\n        \n        // 立即更新一次\n        updateAllPrices();\n        \n        // 设置定时更新 (每30秒)\n        setInterval(updateAllPrices, 30000);\n        \n        console.log('价格更新系统已启动，每30秒更新一次');\n    }\n\n    // 初始化价格更新系统\n    initializePriceUpdates();\n});"]}