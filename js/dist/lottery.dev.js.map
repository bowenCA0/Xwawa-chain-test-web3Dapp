{"version":3,"sources":["lottery.js"],"names":["web3","lotteryContract","userAccount","isConnected","drawTimes","drawCost","isSpinning","prizes","id","name","probability","color","className","lotteryABI","lotteryContractAddress","xwawaTokenAddress","document","addEventListener","updateUI","getElementById","connectWallet","startDraw","updateDrawTimes","validateDrawTimes","querySelectorAll","forEach","element","closeResultModal","initLanguageSwitch","checkWalletConnection","languageSwitch","lang","checked","switchLanguage","localStorage","setItem","savedLang","getItem","elements","hasAttribute","textContent","getAttribute","window","ethereum","request","method","accounts","length","Web3","eth","Contract","updateDrawCostFromContract","console","error","log","on","handleAccountsChanged","handleChainChanged","alert","open","code","methods","call","contractDrawCost","utils","fromWei","costElement","updateTotalCost","chainId","location","reload","change","input","newValue","parseInt","value","isNaN","totalCost","totalCostElement","drawButton","disabled","getUserTokenBalance","userBalance","drawFromContract","results","playSpinSound","spinWheel","setTimeout","addWinEffect","showResultModal","addResultsToList","resetDrawState","getXwawaContract","xwawaContract","balanceOf","balance","parseFloat","generateMockResults","i","result","getRandomPrize","push","random","Math","cumulativeProbability","prize","prizeId","wheel","querySelector","wheelContainer","pointer","classList","add","targetAngle","extraRotations","finalRotation","style","transition","transform","addVibration","remove","audioContext","AudioContext","webkitAudioContext","oscillator","createOscillator","gainNode","createGain","connect","destination","frequency","setValueAtTime","currentTime","exponentialRampToValueAtTime","gain","start","stop","e","navigator","vibrate","createFireworks","container","particle","createElement","left","top","appendChild","resultsList","noResults","display","resultItem","innerHTML","Date","toLocaleTimeString","prepend","modal","resultTitle","resultMessage","resultIcon","getResultMessage","getResultIcon","walletStatus","connectButton","shortenAddress","address","substring","requiredAmount","toWei","toString","approve","send","from","draw","XWAWA_COIN","xwawaAddress","xwawaABI"],"mappings":"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","sourcesContent":["/**\n * Xwawa 抽奖系统 - 核心JavaScript功能实现\n * \n * 主要功能:\n * 1. Web3钱包连接 (MetaMask等)\n * 2. 智能合约交互 (抽奖合约、代币合约)\n * 3. 抽奖转盘动画和音效\n * 4. 抽奖结果处理和显示\n * 5. 用户界面状态管理\n * \n * 智能合约集成:\n * - 抽奖合约: 处理抽奖逻辑、奖池管理、随机数生成\n * - XWAWA代币合约: 处理代币支付和余额查询\n * - 事件监听: 抽奖结果、代币转账等区块链事件\n * \n * 后端API需求:\n * - POST /api/lottery/draw - 记录抽奖历史\n * - GET /api/lottery/history - 获取用户抽奖记录\n * - GET /api/lottery/stats - 获取抽奖统计数据\n * \n * 安全考虑:\n * - 客户端随机数仅用于动画，实际结果由智能合约生成\n * - 交易签名验证\n * - 防止重复提交\n */\n\n/**\n * 全局变量定义\n * 用于管理Web3连接、合约实例和抽奖状态\n */\nlet web3;                    // Web3实例\nlet lotteryContract;         // 抽奖智能合约实例\nlet userAccount;             // 用户钱包地址\nlet isConnected = false;     // 钱包连接状态\nlet drawTimes = 1;           // 抽奖次数\nlet drawCost = 10000;        // 每次抽奖花费的XWAWA代币数量 (从合约获取)\nlet isSpinning = false;      // 转盘旋转状态锁\n\n/**\n * 奖项配置\n * 定义抽奖奖项的基本信息和概率分布\n * 注意: 实际概率由智能合约控制，此处仅用于前端展示\n */\nconst prizes = [\n    { id: 1, name: \"一等奖\", probability: 0.01, color: \"#FF6B6B\", className: \"first-prize\" },\n    { id: 2, name: \"二等奖\", probability: 0.05, color: \"#4ECDC4\", className: \"second-prize\" },\n    { id: 3, name: \"三等奖\", probability: 0.10, color: \"#FFD166\", className: \"third-prize\" },\n    { id: 4, name: \"奖池分红\", probability: 0.15, color: \"#06D6A0\", className: \"pool-prize\" },\n    { id: 5, name: \"双倍抽奖\", probability: 0.20, color: \"#118AB2\", className: \"double\" },\n    { id: 6, name: \"谢谢参与\", probability: 0.49, color: \"#073B4C\", className: \"nothing\" }\n];\n\n/**\n * 智能合约ABI配置\n * \n * 重要说明:\n * 1. 此ABI需要与部署的智能合约完全匹配\n * 2. 部署合约后，需要从编译输出中获取完整ABI\n * 3. 建议将ABI存储在单独的JSON文件中，通过fetch动态加载\n * \n * 主要合约方法:\n * - draw(): 执行抽奖，返回奖项ID\n * - drawCost(): 获取抽奖费用\n * - getBalance(): 获取用户代币余额\n * - getPrizePool(): 获取奖池金额\n * - getUserDrawHistory(): 获取用户抽奖历史\n * \n * 事件监听:\n * - DrawResult: 抽奖结果事件\n * - PrizeAwarded: 奖品发放事件\n * - PoolUpdated: 奖池更新事件\n */\nconst lotteryABI = [\n    // TODO: 从实际部署的合约中获取完整ABI\n    // 以下是示例结构，实际使用时需要替换\n    {\n        \"inputs\": [],\n        \"name\": \"draw\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"drawCost\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n    // 更多方法和事件定义...\n];\n\n/**\n * 智能合约地址配置\n * \n * 部署说明:\n * 1. 在测试网部署合约后，更新此地址\n * 2. 主网部署前，确保合约经过充分测试和审计\n * 3. 建议使用环境变量管理不同网络的合约地址\n * \n * 网络配置:\n * - 测试网: Goerli, Sepolia等\n * - 主网: Ethereum Mainnet\n * - 侧链: Polygon, BSC等\n */\nconst lotteryContractAddress = \"0x1234567890123456789012345678901234567890\"; // TODO: 替换为实际部署地址\n\n/**\n * XWAWA代币合约地址\n * 用于代币余额查询和授权操作\n */\nconst xwawaTokenAddress = \"0x0987654321098765432109876543210987654321\"; // TODO: 替换为实际代币地址\n\n/**\n * 页面初始化\n * 在DOM加载完成后执行所有初始化操作\n */\ndocument.addEventListener('DOMContentLoaded', function() {\n    // 初始化用户界面状态\n    updateUI();\n    \n    // 绑定用户交互事件\n    document.getElementById('connect-wallet-btn').addEventListener('click', connectWallet);\n    document.getElementById('draw-button').addEventListener('click', startDraw);\n    document.getElementById('draw-times-minus').addEventListener('click', () => updateDrawTimes(-1));\n    document.getElementById('draw-times-plus').addEventListener('click', () => updateDrawTimes(1));\n    document.getElementById('draw-times-input').addEventListener('change', validateDrawTimes);\n    \n    // 绑定弹窗关闭事件\n    document.querySelectorAll('.close-modal, .close-result-btn').forEach(element => {\n        element.addEventListener('click', closeResultModal);\n    });\n    \n    // 初始化多语言功能\n    initLanguageSwitch();\n    \n    // 检查是否已连接钱包 (页面刷新后恢复状态)\n    checkWalletConnection();\n});\n\n/**\n * 初始化语言切换功能\n * 绑定语言切换开关的事件监听器\n */\nfunction initLanguageSwitch() {\n    const languageSwitch = document.getElementById('language-switch');\n    if (languageSwitch) {\n        languageSwitch.addEventListener('change', function() {\n            const lang = this.checked ? 'en' : 'zh';\n            switchLanguage(lang);\n            // 保存用户语言偏好到本地存储\n            localStorage.setItem('preferred-language', lang);\n        });\n        \n        // 恢复用户语言偏好\n        const savedLang = localStorage.getItem('preferred-language') || 'zh';\n        languageSwitch.checked = savedLang === 'en';\n        switchLanguage(savedLang);\n    }\n}\n\n/**\n * 语言切换功能\n * 根据选择的语言更新页面文本内容\n * @param {string} lang - 语言代码 ('zh' 或 'en')\n */\nfunction switchLanguage(lang) {\n    const elements = document.querySelectorAll('[data-lang-zh], [data-lang-en]');\n    \n    elements.forEach(element => {\n        if (lang === 'zh') {\n            if (element.hasAttribute('data-lang-zh')) {\n                element.textContent = element.getAttribute('data-lang-zh');\n            }\n        } else {\n            if (element.hasAttribute('data-lang-en')) {\n                element.textContent = element.getAttribute('data-lang-en');\n            }\n        }\n    });\n}\n\n/**\n * 检查钱包连接状态\n * 页面加载时检查是否已连接钱包，恢复连接状态\n */\nasync function checkWalletConnection() {\n    if (window.ethereum) {\n        try {\n            const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n            if (accounts.length > 0) {\n                userAccount = accounts[0];\n                web3 = new Web3(window.ethereum);\n                lotteryContract = new web3.eth.Contract(lotteryABI, lotteryContractAddress);\n                isConnected = true;\n                updateUI();\n                \n                // 获取最新的抽奖成本\n                await updateDrawCostFromContract();\n            }\n        } catch (error) {\n            console.error(\"检查钱包连接失败:\", error);\n        }\n    }\n}\n\n/**\n * 连接钱包功能\n * 检测并连接用户的Web3钱包 (主要支持MetaMask)\n * \n * 功能流程:\n * 1. 检测钱包是否安装\n * 2. 请求用户授权连接\n * 3. 初始化Web3实例和智能合约\n * 4. 获取合约参数 (抽奖成本等)\n * 5. 更新UI状态\n * \n * 错误处理:\n * - 钱包未安装: 提示用户安装MetaMask\n * - 用户拒绝连接: 显示连接失败信息\n * - 网络错误: 提示检查网络连接\n * - 合约调用失败: 使用默认参数\n */\nasync function connectWallet() {\n    try {\n        // 检查是否安装了Web3钱包 (MetaMask等)\n        if (window.ethereum) {\n            console.log(\"Web3钱包已检测到\");\n            \n            // 请求用户授权连接钱包\n            const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n            userAccount = accounts[0];\n            \n            // 创建Web3实例\n            web3 = new Web3(window.ethereum);\n            \n            // 初始化抽奖智能合约实例\n            lotteryContract = new web3.eth.Contract(lotteryABI, lotteryContractAddress);\n            \n            // 从智能合约获取最新的抽奖成本\n            await updateDrawCostFromContract();\n            \n            // 监听账户变化事件\n            window.ethereum.on('accountsChanged', handleAccountsChanged);\n            \n            // 监听网络变化事件\n            window.ethereum.on('chainChanged', handleChainChanged);\n            \n            // 更新连接状态\n            isConnected = true;\n            \n            // 更新用户界面\n            updateUI();\n            \n            console.log(\"钱包连接成功:\", userAccount);\n            \n        } else {\n            // 钱包未安装的处理\n            alert(\"请安装MetaMask钱包以使用抽奖功能！\");\n            window.open(\"https://metamask.io/download/\", \"_blank\");\n        }\n    } catch (error) {\n        console.error(\"连接钱包失败:\", error);\n        \n        // 根据错误类型显示不同的提示信息\n        if (error.code === 4001) {\n            alert(\"用户拒绝了钱包连接请求\");\n        } else if (error.code === -32002) {\n            alert(\"钱包连接请求已在处理中，请检查MetaMask\");\n        } else {\n            alert(\"连接钱包时发生错误，请重试\");\n        }\n        \n        // 重置连接状态\n        isConnected = false;\n        updateUI();\n    }\n}\n\n/**\n * 从智能合约更新抽奖成本\n * 获取合约中设置的最新抽奖费用\n */\nasync function updateDrawCostFromContract() {\n    try {\n        const contractDrawCost = await lotteryContract.methods.drawCost().call();\n        drawCost = web3.utils.fromWei(contractDrawCost, 'ether');\n        console.log(\"合约抽奖成本:\", drawCost);\n        \n        // 更新UI显示\n        const costElement = document.getElementById('cost-amount');\n        if (costElement) {\n            costElement.textContent = drawCost;\n        }\n        \n        // 更新总费用显示\n        updateTotalCost();\n        \n    } catch (error) {\n        console.error(\"获取抽奖成本失败:\", error);\n        // 使用默认值，不影响用户体验\n        const costElement = document.getElementById('cost-amount');\n        if (costElement) {\n            costElement.textContent = drawCost;\n        }\n    }\n}\n\n/**\n * 处理账户变化事件\n * 当用户在MetaMask中切换账户时触发\n */\nfunction handleAccountsChanged(accounts) {\n    if (accounts.length === 0) {\n        // 用户断开了钱包连接\n        isConnected = false;\n        userAccount = null;\n        console.log(\"钱包已断开连接\");\n    } else {\n        // 用户切换了账户\n        userAccount = accounts[0];\n        console.log(\"账户已切换:\", userAccount);\n    }\n    updateUI();\n}\n\n/**\n * 处理网络变化事件\n * 当用户在MetaMask中切换网络时触发\n */\nfunction handleChainChanged(chainId) {\n    console.log(\"网络已切换:\", chainId);\n    // 重新加载页面以确保应用状态正确\n    window.location.reload();\n}\n\n/**\n * 更新抽奖次数\n * 通过加减按钮调整抽奖次数\n * @param {number} change - 变化量 (+1 或 -1)\n */\nfunction updateDrawTimes(change) {\n    const input = document.getElementById('draw-times-input');\n    let newValue = parseInt(input.value) + change;\n    \n    // 确保次数在有效范围内 (1-100次)\n    if (newValue < 1) newValue = 1;\n    if (newValue > 100) newValue = 100;\n    \n    input.value = newValue;\n    drawTimes = newValue;\n    updateTotalCost();\n}\n\n/**\n * 验证抽奖次数输入\n * 当用户直接在输入框中输入数字时进行验证\n */\nfunction validateDrawTimes() {\n    const input = document.getElementById('draw-times-input');\n    let value = parseInt(input.value);\n    \n    // 确保输入是有效数字且在允许范围内\n    if (isNaN(value) || value < 1) {\n        value = 1;\n    } else if (value > 100) {\n        value = 100;\n    }\n    \n    input.value = value;\n    drawTimes = value;\n    updateTotalCost();\n}\n\n/**\n * 更新总花费显示\n * 根据抽奖次数和单次费用计算总费用\n */\nfunction updateTotalCost() {\n    const totalCost = drawTimes * drawCost;\n    const totalCostElement = document.getElementById('total-cost-amount');\n    if (totalCostElement) {\n        totalCostElement.textContent = totalCost;\n    }\n}\n\n/**\n * 开始抽奖功能\n * 执行抽奖流程，包括智能合约交互和结果处理\n * \n * 抽奖流程:\n * 1. 验证钱包连接状态\n * 2. 检查用户代币余额\n * 3. 调用智能合约执行抽奖\n * 4. 处理抽奖结果和动画\n * 5. 更新用户界面和历史记录\n * \n * 智能合约交互:\n * - 检查用户XWAWA代币余额\n * - 授权合约扣除代币\n * - 调用抽奖合约方法\n * - 监听抽奖结果事件\n * \n * 后端API调用:\n * - POST /api/lottery/draw - 记录抽奖历史\n * - PUT /api/users/balance - 更新用户余额\n */\nasync function startDraw() {\n    // 检查钱包连接状态\n    if (!isConnected) {\n        alert('请先连接钱包');\n        return;\n    }\n    \n    // 防止重复抽奖\n    if (isSpinning) {\n        return;\n    }\n    \n    // 设置抽奖状态，禁用抽奖按钮\n    isSpinning = true;\n    const drawButton = document.getElementById('draw-button');\n    if (drawButton) {\n        drawButton.disabled = true;\n        drawButton.textContent = '抽奖中...';\n    }\n    \n    try {\n        // 检查用户代币余额\n        const totalCost = drawTimes * drawCost;\n        const userBalance = await getUserTokenBalance();\n        \n        if (userBalance < totalCost) {\n            alert(`余额不足！需要 ${totalCost} XWAWA，当前余额 ${userBalance} XWAWA`);\n            return;\n        }\n        \n        // 调用智能合约执行抽奖\n        const results = await drawFromContract();\n        \n        // 播放抽奖音效\n        playSpinSound();\n        \n        // 执行转盘动画 (使用第一个结果)\n        if (results.length > 0) {\n            spinWheel(results[0].id);\n        }\n        \n        // 等待动画完成后显示结果\n        setTimeout(() => {\n            // 添加获奖特效\n            if (results.length > 0 && results[0].id <= 4) {\n                addWinEffect(results[0].id);\n            }\n            \n            // 显示抽奖结果\n            showResultModal(results);\n            \n            // 添加到历史记录\n            addResultsToList(results);\n            \n            // 重置抽奖状态\n            resetDrawState();\n            \n        }, 3000); // 等待转盘动画完成\n        \n    } catch (error) {\n        console.error(\"抽奖失败:\", error);\n        alert('抽奖失败，请重试');\n        resetDrawState();\n    }\n}\n\n/**\n * 重置抽奖状态\n * 恢复抽奖按钮和相关UI状态\n */\nfunction resetDrawState() {\n    isSpinning = false;\n    const drawButton = document.getElementById('draw-button');\n    if (drawButton) {\n        drawButton.disabled = false;\n        drawButton.textContent = '开始抽奖';\n    }\n}\n\n/**\n * 获取用户代币余额\n * 从XWAWA代币合约查询用户余额\n * @returns {Promise<number>} 用户代币余额\n */\nasync function getUserTokenBalance() {\n    try {\n        const xwawaContract = await getXwawaContract();\n        const balance = await xwawaContract.methods.balanceOf(userAccount).call();\n        return parseFloat(web3.utils.fromWei(balance, 'ether'));\n    } catch (error) {\n        console.error(\"获取用户余额失败:\", error);\n        return 0;\n    }\n}\n\n/**\n * 模拟抽奖结果生成 (仅用于开发测试)\n * 实际生产环境中，结果应完全由智能合约生成\n * @returns {Array} 抽奖结果数组\n */\nfunction generateMockResults() {\n    const results = [];\n    for (let i = 0; i < drawTimes; i++) {\n        // 随机选择一个奖项 (仅用于前端展示)\n        const result = getRandomPrize();\n        results.push(result);\n            \n        // 如果是第一次抽奖，旋转转盘\n        if (i === 0) {\n            spinWheel(result.id);\n        }\n    }\n        \n    // 添加抽奖结果到结果列表\n    addResultsToList(results);\n        \n    // 如果只抽奖一次，显示结果弹窗\n    if (drawTimes === 1) {\n        setTimeout(() => {\n            showResultModal(results[0]);\n        }, 5500); // 等待转盘停止后显示\n    }\n        \n    console.log(\"抽奖完成，结果:\", results);\n    try {\n        console.error(\"抽奖失败:\", error);\n        alert('抽奖失败，请重试');\n        isSpinning = false;\n        document.getElementById('draw-button').disabled = false;\n    }\n    catch (error) {\n        console.error(\"抽奖失败:\", error);\n        alert('抽奖失败，请重试');\n        isSpinning = false;\n        document.getElementById('draw-button').disabled = false;\n    }\n\n    // 获取随机奖项\n    function getRandomPrize() {\n        const random = Math.random();\n        let cumulativeProbability = 0;\n    \n        for (const prize of prizes) {\n            cumulativeProbability += prize.probability;\n            if (random <= cumulativeProbability) {\n                return prize;\n            }\n        }\n    \n        // 默认返回最后一个奖项\n        return prizes[prizes.length - 1];\n    }\n\n    // 旋转转盘 - Web3风格优化版本\n    function spinWheel(prizeId) {\n        const wheel = document.querySelector('.wheel-inner');\n        const wheelContainer = document.querySelector('.lottery-wheel-container');\n        const pointer = document.querySelector('.wheel-pointer');\n    \n        // 添加旋转开始的视觉效果\n        wheelContainer.classList.add('spinning');\n        pointer.classList.add('pointer-active');\n    \n        // 计算旋转角度\n        // 每个奖项占60度，计算目标奖项的中心角度\n        const targetAngle = (prizeId - 1) * 60 + 30;\n    \n        // 添加随机的额外旋转圈数 (6-8圈)\n        const extraRotations = (6 + Math.random() * 2) * 360;\n    \n        // 最终旋转角度 = 额外圈数 + (360 - 目标角度)\n        const finalRotation = extraRotations + (360 - targetAngle);\n    \n        // 应用高级旋转动画\n        wheel.style.transition = 'transform 4s cubic-bezier(0.25, 0.46, 0.45, 0.94)';\n        wheel.style.transform = `rotate(${finalRotation}deg)`;\n    \n        // 添加音效和震动效果 (如果支持)\n        playSpinSound();\n        addVibration();\n    \n        // 动画过程中的中间效果\n        setTimeout(() => {\n            // 中途添加一些视觉反馈\n            wheelContainer.classList.add('mid-spin');\n        }, 2000);\n    \n        // 动画结束后的处理\n        setTimeout(() => {\n            isSpinning = false;\n            wheelContainer.classList.remove('spinning', 'mid-spin');\n            pointer.classList.remove('pointer-active');\n            wheelContainer.classList.add('spin-complete');\n        \n            // 添加获奖效果\n            addWinEffect(prizeId);\n        \n            document.getElementById('draw-button').disabled = false;\n        \n            // 清除完成状态\n            setTimeout(() => {\n                wheelContainer.classList.remove('spin-complete');\n            }, 1000);\n        }, 4000);\n    }\n\n    // 播放旋转音效\n    function playSpinSound() {\n        try {\n            // 创建音频上下文来播放简单的音效\n            const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n            const oscillator = audioContext.createOscillator();\n            const gainNode = audioContext.createGain();\n        \n            oscillator.connect(gainNode);\n            gainNode.connect(audioContext.destination);\n        \n            oscillator.frequency.setValueAtTime(200, audioContext.currentTime);\n            oscillator.frequency.exponentialRampToValueAtTime(100, audioContext.currentTime + 0.1);\n        \n            gainNode.gain.setValueAtTime(0.1, audioContext.currentTime);\n            gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.1);\n        \n            oscillator.start(audioContext.currentTime);\n            oscillator.stop(audioContext.currentTime + 0.1);\n        } catch (e) {\n            // 如果音频API不支持，静默失败\n            console.log('Audio not supported');\n        }\n    }\n\n    // 添加震动效果\n    function addVibration() {\n        if ('vibrate' in navigator) {\n            navigator.vibrate([100, 50, 100]);\n        }\n    }\n\n    // 添加获奖效果\n    function addWinEffect(prizeId) {\n        const wheelContainer = document.querySelector('.lottery-wheel-container');\n    \n        // 根据奖项等级添加不同的效果\n        if (prizeId <= 3) {\n            // 高级奖项：添加闪光效果\n            wheelContainer.classList.add('major-win');\n            createFireworks();\n            setTimeout(() => {\n                wheelContainer.classList.remove('major-win');\n            }, 3000);\n        } else if (prizeId <= 5) {\n            // 中级奖项：添加发光效果\n            wheelContainer.classList.add('minor-win');\n            setTimeout(() => {\n                wheelContainer.classList.remove('minor-win');\n            }, 2000);\n        }\n    }\n\n    // 创建烟花效果\n    function createFireworks() {\n        const container = document.querySelector('.lottery-wheel-container');\n    \n        for (let i = 0; i < 20; i++) {\n            setTimeout(() => {\n                const particle = document.createElement('div');\n                particle.className = 'firework-particle';\n                particle.style.left = Math.random() * 100 + '%';\n                particle.style.top = Math.random() * 100 + '%';\n                container.appendChild(particle);\n            \n                setTimeout(() => {\n                    particle.remove();\n                }, 1000);\n            }, i * 100);\n        }\n    }\n\n    // 添加结果到列表\n    function addResultsToList(results) {\n        const resultsList = document.querySelector('.results-list');\n        const noResults = document.querySelector('.no-results');\n    \n        if (noResults) {\n            noResults.style.display = 'none';\n        }\n    \n        results.forEach(result => {\n            const resultItem = document.createElement('div');\n            resultItem.className = `result-item ${result.className}`;\n        \n            resultItem.innerHTML = `\n            <span class=\"result-name\">${result.name}</span>\n            <span class=\"result-value\">${new Date().toLocaleTimeString()}</span>\n        `;\n        \n            resultsList.prepend(resultItem);\n        });\n    }\n\n    // 显示结果弹窗\n    function showResultModal(result) {\n        const modal = document.getElementById('result-modal');\n        const resultTitle = document.getElementById('result-title');\n        const resultMessage = document.getElementById('result-message');\n        const resultIcon = document.getElementById('result-icon');\n    \n        // 设置结果信息\n        resultTitle.textContent = `恭喜获得: ${result.name}`;\n        resultMessage.textContent = getResultMessage(result.id);\n        resultIcon.textContent = getResultIcon(result.id);\n        resultIcon.style.color = result.color;\n    \n        // 显示弹窗\n        modal.style.display = 'block';\n    }\n\n    // 关闭结果弹窗\n    function closeResultModal() {\n        const modal = document.getElementById('result-modal');\n        modal.style.display = 'none';\n    }\n\n    // 获取结果消息\n    function getResultMessage(prizeId) {\n        switch (prizeId) {\n            case 1:\n                return \"恭喜您获得一等奖！奖励已发放到您的账户。\";\n            case 2:\n                return \"恭喜您获得二等奖！奖励已发放到您的账户。\";\n            case 3:\n                return \"恭喜您获得三等奖！奖励已发放到您的账户。\";\n            case 4:\n                return \"您获得了奖池分红！奖励已发放到您的账户。\";\n            case 5:\n                return \"您获得了双倍抽奖机会！下次抽奖将获得双倍奖励。\";\n            case 6:\n                return \"谢谢参与，下次再接再厉！\";\n            default:\n                return \"抽奖结果未知，请联系客服。\";\n        }\n    }\n\n    // 获取结果图标\n    function getResultIcon(prizeId) {\n        switch (prizeId) {\n            case 1:\n                return \"🏆\";\n            case 2:\n                return \"🥈\";\n            case 3:\n                return \"🥉\";\n            case 4:\n                return \"💰\";\n            case 5:\n                return \"🎯\";\n            case 6:\n                return \"😊\";\n            default:\n                return \"❓\";\n        }\n    }\n\n    // 更新UI\n    function updateUI() {\n        const walletStatus = document.getElementById('wallet-status');\n        const connectButton = document.getElementById('connect-wallet-btn');\n        const drawButton = document.getElementById('draw-button');\n    \n        if (isConnected) {\n            walletStatus.textContent = `已连接: ${shortenAddress(userAccount)}`;\n            walletStatus.className = 'connected';\n            connectButton.textContent = '已连接';\n            connectButton.disabled = true;\n            drawButton.disabled = false;\n        } else {\n            walletStatus.textContent = '未连接钱包';\n            walletStatus.className = 'not-connected';\n            connectButton.textContent = '连接钱包';\n            connectButton.disabled = false;\n            drawButton.disabled = true;\n        }\n    \n        // 更新抽奖成本和总成本\n        document.getElementById('cost-amount').textContent = drawCost;\n        updateTotalCost();\n    }\n\n    // 缩短地址显示\n    function shortenAddress(address) {\n        return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n    }\n}\n\n    /**\n     * 以下是与智能合约交互的函数\n     * 注意: 这些函数需要根据实际的合约ABI进行调整\n     * \n     * 合约函数说明:\n     * 1. draw(): 进行一次抽奖，返回抽奖结果\n     * 2. drawCost(): 获取每次抽奖的成本\n     * 3. drawTimes(): 获取用户的抽奖次数\n     * 4. XWAWA_COIN(): 获取Xwawa代币合约地址\n     * \n     * 这些函数在实际部署时需要根据Lottery.abi文件中的实际合约接口进行调整\n     */\n\n    // 实际调用合约的draw函数\n    async function drawFromContract() {\n        try {\n            // 检查用户是否有足够的代币\n            const xwawaContract = await getXwawaContract();\n            const balance = await xwawaContract.methods.balanceOf(userAccount).call();\n            const requiredAmount = web3.utils.toWei((drawCost * drawTimes).toString(), 'ether');\n        \n            if (parseInt(balance) < parseInt(requiredAmount)) {\n                alert('Xwawa代币余额不足，请充值后再试');\n                return null;\n            }\n        \n            // 授权合约使用代币\n            await xwawaContract.methods.approve(lotteryContractAddress, requiredAmount).send({ from: userAccount });\n        \n            // 调用抽奖函数\n            const result = await lotteryContract.methods.draw().send({ from: userAccount });\n            return result;\n        } catch (error) {\n            console.error(\"合约抽奖失败:\", error);\n            throw error;\n        }\n    }\n\n    // 获取Xwawa代币合约\n    async function getXwawaContract() {\n        try {\n            const xwawaAddress = await lotteryContract.methods.XWAWA_COIN().call();\n        \n            // 这里需要Xwawa代币的ABI，这只是一个示例\n            const xwawaABI = [\n                {\n                    \"constant\": true,\n                    \"inputs\": [{ \"name\": \"_owner\", \"type\": \"address\" }],\n                    \"name\": \"balanceOf\",\n                    \"outputs\": [{ \"name\": \"balance\", \"type\": \"uint256\" }],\n                    \"type\": \"function\"\n                },\n                {\n                    \"constant\": false,\n                    \"inputs\": [\n                        { \"name\": \"_spender\", \"type\": \"address\" },\n                        { \"name\": \"_value\", \"type\": \"uint256\" }\n                    ],\n                    \"name\": \"approve\",\n                    \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }],\n                    \"type\": \"function\"\n                }\n            ];\n        \n            return new web3.eth.Contract(xwawaABI, xwawaAddress);\n        } catch (error) {\n            console.error(\"获取Xwawa合约失败:\", error);\n            throw error;\n        }\n    }\n\n/**\n * 注意事项:\n * 1. 本代码仅为前端实现，实际使用时需要与后端和区块链进行交互\n * 2. 合约调用部分需要根据实际部署的合约进行调整\n * 3. 抽奖结果应该由合约返回，而不是前端随机生成\n * 4. 用户需要授权合约使用其Xwawa代币\n * 5. 抽奖成本和奖项配置应该从合约中获取\n * \n * 后端开发人员需要:\n * 1. 部署Lottery合约\n * 2. 确保合约中有正确的draw、drawCost等函数\n * 3. 设置正确的Xwawa代币地址\n * 4. 实现区块链交易监听功能\n*/\n"],"file":"lottery.dev.js"}